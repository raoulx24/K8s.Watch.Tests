using k8s.Models;
using k8s;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using Microsoft.Win32;
using YamlDotNet.Core;

namespace K8s.Watch.Tests
{
    public class VulnerabilityReportCrd : CustomResourceDefinition
    {
        public override string Version { get; } = "v1alpha1";
        public override string Group { get; } = "aquasecurity.github.io";
        public override string PluralName { get; } = "vulnerabilityreports";
        public override string Kind { get; } = "CResource";
        public override string? Namespace { get; init; } = "default";
    }

    public class VulnerabilityReportCr : CustomResource, IKubernetesObject<V1ObjectMeta>
    {
        [JsonPropertyName("report")]
        public Report? Report { get; init; }
    }

    public class Report
    {
        [JsonPropertyName("artifact")]
        public Artifact? Artifact { get; set; }
        [JsonPropertyName("os")]
        public Os? Os { get; set; }
        [JsonPropertyName("registry")]
        public Registry? Registry { get; set; }
        [JsonPropertyName("scanner")]
        public Scanner? Scanner { get; set; }
        [JsonPropertyName("summary")]
        public Summary? Summary { get; set; }
        [JsonPropertyName("updateTimestamp")]
        public string UpdateTimestamp { get; set; } = string.Empty;
        [JsonPropertyName("vulnerabilities")]
        public Vulnerability[]? Vulnerabilities { get; set; }
    }

    public class Artifact
    {
        [JsonPropertyName("digest")]
        public string Digest { get; init; } = string.Empty;
        [JsonPropertyName("repository")]
        public string Repository { get; init; } = string.Empty;
        [JsonPropertyName("tag")]
        public string Tag { get; init; } = string.Empty;
    }

    public class Os
    {
        [JsonPropertyName("family")]
        public string Family { get; init; } = string.Empty;
        [JsonPropertyName("name")]
        public string Name { get; init; } = string.Empty;
        [JsonPropertyName("eosl")]
        public bool? Eosl { get; init; }
    }

    public class Registry
    {
        [JsonPropertyName("server")]
        public string Server { get; init; } = string.Empty;
    }
    public class Scanner
    {
        [JsonPropertyName("name")]
        public string Name { get; init; } = string.Empty;
        [JsonPropertyName("vendor")]
        public string Vendor { get; init; } = string.Empty;
        [JsonPropertyName("version")]
        public string Version { get; init; } = string.Empty;
    }

    public class Summary
    {
        [JsonPropertyName("criticalCount")]
        public long CriticalCount { get; init; } = 0;
        [JsonPropertyName("highCount")]
        public long HighCount { get; init; } = 0;
        [JsonPropertyName("lowCount")]
        public long LowCount { get; init; } = 0;
        [JsonPropertyName("mediumCount")]
        public long MediumCount { get; init; } = 0;
        [JsonPropertyName("noneCount")]
        public long NoneCount { get; init; } = 0;
        [JsonPropertyName("unknownCount")]
        public long UnknownCount { get; init; } = 0;
    }

    public class Vulnerability
    {
        [JsonPropertyName("fixedVersion")]
        public string FixedVersion { get; init; } = string.Empty;
        [JsonPropertyName("installedVersion")]
        public string InstalledVersion { get; init; } = string.Empty;
        [JsonPropertyName("lastModifiedDate")]
        public string LastModifiedDate { get; init; } = string.Empty;
        [JsonPropertyName("links")]
        public object[] Links { get; init; } = [];
        [JsonPropertyName("primaryLink")]
        public Uri? PrimaryLink { get; init; }
        [JsonPropertyName("publishedDate")]
        public string PublishedDate { get; init; } = string.Empty;
        [JsonPropertyName("resource")]
        public string Resource { get; init; } = string.Empty;
        [JsonPropertyName("score")]
        public float Score { get; init; } = 0;
        [JsonPropertyName("severity")]
        public string Severity { get; init; } = string.Empty;
        [JsonPropertyName("target")]
        public string Target { get; init; } = string.Empty;
        [JsonPropertyName("title")]
        public string Title { get; init; } = string.Empty;
        [JsonPropertyName("vulnerabilityID")]
        public string VulnerabilityId { get; init; } = string.Empty;
    }

    public enum TrivySeverity
    {
        CRITICAL,
        HIGH,
        MEDIUM,
        LOW,
        UNKNOWN,
    }
}
